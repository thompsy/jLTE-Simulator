system.home = ${sys:user.dir}/
system.testing = ${env:lte.testing}

scenario.seed = 11111.11111
scenario.iterations = 5
scenario.path = src/test/resources/03-19eNodeBs/
scenario.speed = 3
scenario.numRandomUEs = 115
scenario.algorithm = DistributedSFR

scenario.path.ues = config/UEs.xml
scenario.path.enodebs = config/eNodeBs.xml
scenario.path.results = results/

experiment.id = 1
chromosome.id = 2

lte.fadingPath = fading-data
lte.fadingPath.testing = /fading-data/
lte.RBsPerSector = 100
lte.fading = true
lte.shadowing = true
lte.cellRange = 0.5
lte.minDistanceFromCell = 0.035
lte.nyquistNoisePerRB = -121.45

traffic.type = full

traffic.light.rbs = 5
traffic.light.ueProbability = 0.2
traffic.light.proportion.light = 0.7
traffic.light.proportion.mixed = 0.2
traffic.light.proportion.heavy = 0.1
traffic.light.proportion.full = 0.0

traffic.mixed.rbs = 15
traffic.mixed.ueProbability = 0.5
traffic.mixed.proportion.light = 0.2
traffic.mixed.proportion.mixed = 0.6
traffic.mixed.proportion.heavy = 0.2
traffic.mixed.proportion.full = 0.0

traffic.heavy.rbs = 100
traffic.heavy.ueProbability = 1.0
traffic.heavy.proportion.light = 0.0
traffic.heavy.proportion.mixed = 0.0
traffic.heavy.proportion.heavy = 1.0
traffic.heavy.proportion.full = 0.0

traffic.full.rbs = 200
traffic.full.ueProbability = 1.0
traffic.full.proportion.light = 0.0
traffic.full.proportion.mixed = 0.0
traffic.full.proportion.heavy = 0.0
traffic.full.proportion.full = 1.0

algorithm.pf.alpha = 0.000001

algorithm.sfr.edgeUsers = 0.1
algorithm.sfr.numHighPowerRBs = 33

algorithm.serfr.gamma0 = 1
algorithm.serfr.gamma1 = 0.5
algorithm.serfr.gamma2 = 0.5
algorithm.serfr.gamma3 = 1

algorithm.adaptive.edgeThreshold = 0.034615108
algorithm.adaptive.proportionOfHighPowerRBs = 0.739097439
algorithm.adaptive.randomHighPowerRBs = true
algorithm.adaptive.randomTrigger = 0.893225658
algorithm.adaptive.reducedPowerFactor = 0.624144732

algorithm.x2.enabled = false
algorithm.x2.msgWaitTime = 79
algorithm.x2.msgLifeTime = 36
algorithm.x2.maxRBsPerMsg = 6
algorithm.x2.msgAllNeighbours = true

algorithm.peer2peer.window = 100
algorithm.peer2peer.randomStart = true
algorithm.peer2peer.consensus = false
algorithm.peer2peer.consensusProportion = 0.75



